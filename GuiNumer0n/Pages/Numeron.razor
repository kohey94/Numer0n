@page "/numeron"

<h3>Numer0n</h3>

<Switch TValue="bool" @bind-Checked="@IsCheat">チート</Switch>
@if (IsCheat)
{
    <p>@answerNumber</p>

}
else
{
    <p>xxxxx</p>
}

@if (@IsDigitSelect)
{
    <Row>
        <Column ColumnSize="ColumnSize.IsFull">
            何桁のNumer0nに挑戦しますか？
        </Column>
    </Row>
    <Row>
        <Validations ValidateOnLoad="false">
            <Validation UsePattern="true">
                <Column ColumnSize="ColumnSize.Is9">
                    <NumericEdit Size="Size.Small" Pattern="^[1-9]{1}$" TValue="int?" @bind-Value="Digit">
                        <Feedback>
                            <ValidationError>1桁の数字を入力してください。</ValidationError>
                        </Feedback>
                    </NumericEdit>
                </Column>
            </Validation>
        </Validations>
        <Column ColumnSize="ColumnSize.Is3">
            <Button Size="ButtonSize.Small" Color="Color.Danger" @onclick="@(e => SetNumer0nDigit((int)Digit))">挑戦</Button>
        </Column>
    </Row>
}
else
{
    <Row>
        <Column ColumnSize="ColumnSize.IsFull">
            数字を入力してください。
        </Column>
    </Row>
    <Row>
        <Validations ValidateOnLoad="false">
            <Validation UsePattern="true">
                <Column ColumnSize="ColumnSize.Is9">
                    <TextEdit Size="Size.Small" Pattern="@Numer0nService.InputNumberRegex" @bind-Text="Input">
                        <Feedback>
                            <ValidationError>@Digit 桁の数字を入力してください。</ValidationError>
                        </Feedback>
                    </TextEdit>
                </Column>
            </Validation>
        </Validations>
        <Column ColumnSize="ColumnSize.Is3">
            <Button Size="ButtonSize.Small" Color="Color.Success" @onclick="@(e => SetNumber(Input))">判定</Button>
        </Column>
    </Row>
}

<br />
<Table Bordered="true" Hoverable="true">
    <TableHeader ThemeContrast="ThemeContrast.Dark">
        <TableRow>
            <TableHeaderCell>回</TableHeaderCell>
            <TableHeaderCell>入力値</TableHeaderCell>
            <TableHeaderCell>場所も数字も当たり</TableHeaderCell>
            <TableHeaderCell>数字が当たり</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var d in inputList)
        {
            <TableRow>
                <TableRowHeader>@d.Count</TableRowHeader>
                <TableRowCell>@d.InputNumber</TableRowCell>
                <TableRowCell>@d.PlaceNumberHit</TableRowCell>
                <TableRowCell>@d.NumberHit</TableRowCell>
            </TableRow>

        }
    </TableBody>
</Table>


<Modal @ref="modalRef">
    <ModalBackdrop />
    <ModalContent Size="@modalSize" Centered="@centered">
        <ModalHeader>
            <ModalTitle>結果</ModalTitle>
        </ModalHeader>
        <ModalBody MaxHeight="@maxHeight">
            <Label>正解は @answerNumber でした。 </Label>
            <Label>@inputList.Count 回目で当たりました。 </Label>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">閉じる</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
@code {
    /// <summary>
    /// モーダル関係の処理
    /// </summary>

    private Modal modalRef;
    private bool centered = true;
    private ModalSize modalSize = ModalSize.Small;
    private int? maxHeight = null;

    private void ShowModal()
    {
        modalRef.Show();
    }

    private void HideModal()
    {
        modalRef.Hide();
    }
}
